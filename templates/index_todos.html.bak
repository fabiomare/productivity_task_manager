<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
            margin: 0;
            padding: 20px;
        }
        h1 {
            color: #4CAF50;
        }
        .todo-item {
            background: #fff;
            padding: 10px;
            margin: 10px 0;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        .todo-item h3 {
            margin: 0;
            font-weight: bold;
        }
        .todo-item p {
            margin: 5px 0;
        }
        .todo-item .priority {
            color: #FF6347;
            font-weight: bold;
        }
        .todo-item .hours {
            color: #6A5ACD;
            font-weight: bold;
        }
        .todo-item .subtasks {
            margin-top: 10px;
            padding: 10px;
            background: #f2f2f2;
            border-radius: 5px;
        }
        .todo-form {
            margin: 20px 0;
            padding: 15px;
            background-color: #fff;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        input[type="text"], input[type="number"] {
            padding: 8px;
            margin: 5px;
            width: 100%;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        button {
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
        }
        button:hover {
            background-color: #45a049;
        }
        .done-section {
            margin-top: 20px;
            padding: 10px;
            background-color: #e6ffe6;
        }
    </style>
</head>
<body>

    <h1>Todo List</h1>

    <!-- Form to Add New Todo -->
    <div class="todo-form">
        <h3>Add a New Todo</h3>
        <form id="todo-form">
            <input type="text" id="title" placeholder="Title" required>
            <input type="text" id="description" placeholder="Description" required>
            <input type="number" id="priority" placeholder="Priority (0-5)" min="0" max="5" required>
            <input type="number" id="estimated-hours" placeholder="Estimated Hours (optional)" min="0">
            <div id="subtasks-container">
                <h4>Subtasks</h4>
                <button type="button" onclick="addSubtask()">Add Subtask</button>
                <div id="subtask-list"></div>
            </div>
            <button type="submit">Add Todo</button>
        </form>
    </div>

	<div id="active-todo-list">
		{% for todo in active_todos %}
		<div class="todo-item" id="todo-{{ todo.id }}">
			<h3>{{ todo.title }}</h3>
			<p>{{ todo.description }}</p>
			<p class="priority">Priority: {{ todo.priority }}</p>
			<p class="hours">Estimated Hours: {{ todo.estimated_hours or 'N/A' }}</p>
			{% if todo.subtasks %}
			<div class="subtasks">
				<h4>Subtasks</h4>
				<ul>
					{% for subtask in todo.subtasks %}
					<li>
						<input type="checkbox" {% if subtask.done %}checked{% endif %} disabled> {{ subtask.title }}
					</li>
					{% endfor %}
				</ul>
			</div>
			{% endif %}
			<button class="mark-done-button" data-todo-id="{{ todo.id }}">Mark as Done</button>
		</div>
		{% endfor %}
	</div>

    <!-- Done Todo List Container -->
    <h2>Done Todos</h2>
    <div id="done-todo-list">
        {% for todo in done_todos %}
        <div class="todo-item">
            <h3>{{ todo.title }}</h3>
            <p>{{ todo.description }}</p>
            <p class="priority">Priority: {{ todo.priority }}</p>
            <p class="hours">Estimated Hours: {{ todo.estimated_hours or 'N/A' }}</p>
            {% if todo.subtasks %}
            <div class="subtasks">
                <h4>Subtasks</h4>
                <ul>
                    {% for subtask in todo.subtasks %}
                    <li>
                        <input type="checkbox" {% if subtask.done %}checked{% endif %} disabled> {{ subtask.title }}
                    </li>
                    {% endfor %}
                </ul>
            </div>
            {% endif %}
        </div>
        {% endfor %}
    </div>

    <script>
        async function fetchTodos() {
			try {
				const response = await fetch("/todos/");
				if (response.ok) {
					const htmlContent = await response.text();
					document.body.innerHTML = htmlContent;
					bindEventListeners();
				} else {
					console.error("Failed to fetch todos:", response.statusText);
				}
			} catch (error) {
				console.error("Error fetching todos:", error);
			}
		}

		
	    function bindEventListeners() {
			document.getElementById("todo-form").addEventListener("submit", addTodo);
			document.querySelectorAll(".mark-done-button").forEach((button) => {
				button.addEventListener("click", () => markDone(button.dataset.todoId));
			});
		}

		async function addTodo(event) {
			event.preventDefault();
			const title = document.getElementById("title").value;
			const description = document.getElementById("description").value;
			const priority = document.getElementById("priority").value;
			const estimatedHours = document.getElementById("estimated-hours").value;
			const subtaskElements = document.getElementById("subtask-list").getElementsByTagName("input");

			const subtasks = Array.from(subtaskElements).map((el) => ({
				title: el.value,
				estimated_hours: parseInt(el.dataset.hours),
			}));

			try {
				const response = await fetch("/todos/", {
					method: "POST",
					headers: { "Content-Type": "application/json" },
					body: JSON.stringify({
						title,
						description,
						priority: parseInt(priority),
						subtasks,
					}),
				});
				if (response.ok) {
					fetchTodos();
				} else {
					alert("Failed to add todo");
				}
			} catch (error) {
				console.error("Error adding todo:", error);
			}
		}

		async function markDone(todoId) {
			try {
				const response = await fetch(`/todos/${todoId}/done`, {
					method: "PUT",
					headers: { "Content-Type": "application/json" },
				});
				if (response.ok) {
					fetchTodos();
				} else {
					alert("Failed to mark todo as done");
				}
			} catch (error) {
				console.error("Error marking todo as done:", error);
			}
		}

		function addSubtask() {
			const subtaskList = document.getElementById("subtask-list");
			const subtaskDiv = document.createElement("div");
			subtaskDiv.innerHTML = `
				<input type="text" placeholder="Subtask Title" />
				<input type="number" placeholder="Hours" data-hours />
			`;
			subtaskList.appendChild(subtaskDiv);
		}

		window.onload = fetchTodos;
    </script>
</body>
</html>
